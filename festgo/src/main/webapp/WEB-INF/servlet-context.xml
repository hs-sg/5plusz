<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="https://www.springframework.org/schema/beans"
    xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="https://www.springframework.org/schema/context"
    xmlns:mvc="https://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="https://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        https://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        https://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <!-- Spring Web MVC 설정들을 애너테이션 기반으로 설정할 수 있도록 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 정적 리소스 매핑 설정 -->

   <mvc:resources mapping="/uploads/**" 
               location="C:/JAVA157/workspaces/oplusz/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/festgo/uploads/"/>

    <!-- Spring MVC에서 dispatcherServlet이 처리하지 않는 정적 요청에 필요한 파일들
    (이미지, CSS, JavaScript, ...)이 있는 폴더 위치를 설정.
    정적 리소스(이미지, CSS, JS, ...)들을 /webapp/static/ 폴더 아래에 작성. 
    요청 주소가 /context-root/폴더(하위폴더)이름/*.jpg[js, css, ...]인 요청들에 대해서
    폴더위치를 webapp/static/ 폴더에 찾을 수 있도록 하기 위한 설정.
    -->
    <mvc:resources location="/static/" mapping="/**" />
       
    <!-- 뷰 리졸버: Spring MVC에서 사용하는 뷰(JSP)를 찾기 위한 설정. -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 컨트롤러 클래스들을 작성하는 패키지 이름 설정. 
    base-package와 그 하위 패키지 아래에 있는 컴포넌트 애너테이션(@Component, @Controller, ...)이
    사용된 클래스들을 찾아서 객체를 (싱글턴으로) 생성하고 관리하기 위한 설정.
    요청 주소와 요청 방식에 매핑된 클래스#메서드를 HandlerMapping에서 관리하고,
    디스패쳐 서블릿에게 알려줌.
    -->
    <context:component-scan base-package="com.oplusz.festgo.web" />
    
    
</beans>