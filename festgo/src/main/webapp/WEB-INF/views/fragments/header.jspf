<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<%@ taglib prefix="c" uri="jakarta.tags.core"%>

<!-- Bootstrap Icons CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<!-- 사용자 정의 햄버거 아이콘 및 버튼 스타일 -->
<style>
    /* 버튼 자체의 배경과 테두리를 제거 */
    .btn-hamburger {
        background-color: transparent !important;
        border: none !important;
        padding: 0;
    }
    /* 사용자 정의 햄버거 아이콘: 세 개의 검은색 가로줄 */
    .custom-toggler-icon {
        display: inline-block;
        width: 30px;
        height: 24px;
        position: relative;
    }
    .custom-toggler-icon span {
        display: block;
        position: absolute;
        height: 3px;
        width: 100%;
        background: #000;
        border-radius: 2px;
        left: 0;
        transition: all 0.2s;
    }
    .custom-toggler-icon span:nth-child(1) { top: 0; }
    .custom-toggler-icon span:nth-child(2) { top: 10px; }
    .custom-toggler-icon span:nth-child(3) { top: 20px; }

    /* 알림 버튼 스타일 */
    .btn-notification {
        background-color: transparent !important;
        border: none !important;
        padding: 0;
        margin-right: 1rem;
        position: relative;
        transition: transform 0.2s;
    }
    
    .btn-notification:hover {
        transform: scale(1.1);
    }
    
    .notification-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background-color: #dc3545;
        color: white;
        border-radius: 50%;
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        display: none;
    }

    /* 알림 필터 스타일 */
    .notification-filters {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1rem;
        padding: 0.5rem;
        border-bottom: 1px solid #dee2e6;
    }

    .filter-btn {
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        border: 1px solid #dee2e6;
        background: white;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

    .filter-btn.active {
        background: #0d6efd;
        color: white;
        border-color: #0d6efd;
    }

    /* 빈 상태 스타일 */
    .empty-state {
        text-align: center;
        padding: 2rem;
        color: #6c757d;
    }

    .empty-state-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        color: #dee2e6;
    }
</style>

<!-- Header -->
<!-- Header: 왼쪽에 Fest Go, 오른쪽에 알림과 햄버거 메뉴 버튼 -->
<header class="p-3" style="background-color: transparent;">
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <!-- 왼쪽: 로고 텍스트 -->
        <div>
            <c:url value="/" var="homePage"/>
            <a href="${homePage}" class="text-dark text-decoration-none" 
               style="font-size: 2.5rem; font-weight: bold;">
                🅵🅴🆂🆃 🅶🅾
            </a>
        </div>
        <!-- 오른쪽: 알림 버튼과 햄버거 메뉴 버튼을 포함하는 div -->
        <div class="d-flex align-items-center">
            <!-- 알림 버튼 -->
            <c:if test="${not empty signedInUser}">
                <button class="btn btn-notification me-3" type="button"
                        data-bs-toggle="modal" data-bs-target="#notificationModal">
                    <i class="bi bi-bell fs-4"></i>
                    <span class="notification-badge" id="notificationBadge" style="display: block;">
                        <c:out value="${notificationCount}" default="0"/>
                    </span>
                </button>
            </c:if>
            <!-- 햄버거 메뉴 버튼 -->
            <button class="btn btn-hamburger" type="button"
                    data-bs-toggle="offcanvas" data-bs-target="#offcanvasMenu"
                    aria-controls="offcanvasMenu">
                <span class="custom-toggler-icon">
                    <span></span>
                    <span></span>
                    <span></span>
                </span>
            </button>
        </div>
    </div>
</header>

<!-- Offcanvas 메뉴 (오른쪽에서 슬라이드) -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasMenu" aria-labelledby="offcanvasMenuLabel">
    <div class="offcanvas-header">
        <c:if test="${ empty signedInUser }">
            <h5 class="offcanvas-title" id="offcanvasMenuLabel">Menu</h5>
        </c:if>
        <c:if test="${ not empty signedInUser }">
            <h5 class="offcanvas-title" id="offcanvasMenuId">안녕하세요! ${signedInUser }님</h5>
        </c:if>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <!-- 내비게이션 항목 전체 -->
        <ul class="nav flex-column">
            <li class="nav-item">
                <c:url value="/" var="homePage"/>
                <a class="nav-link" href="${homePage}">전국축제</a>
            </li>
            <li class="nav-item">
                <c:url value="/fest/cal" var="festCal"/>
                <a class="nav-link" href="${festCal}">축제달력</a>
            </li>
            <li class="nav-item">
                <c:url value="/post/list" var="postList"/>
                <a class="nav-link" href="${postList}">커뮤니티</a>
            </li>
            <c:if test="${memberRole eq 2 || memberRole eq 3}">
                <li class="nav-item">
                    <c:url value="/fest/create" var="festCreate"/>
                    <a class="nav-link" href="${festCreate}">축제등록</a>
                </li>
            </c:if>
            <!-- 로그인 상태에 따른 메뉴 항목 -->
            <c:if test="${empty signedInUser}">
                <li class="nav-item">
                    <a class="nav-link" href="" id="linkSignin">LOGIN</a>
                </li>
                <li class="nav-item">
                    <c:url value="/user/signup" var="signUpPage"/>
                    <a class="nav-link" href="${signUpPage}">SIGNUP</a>
                </li>
            </c:if>
            <c:if test="${not empty signedInUser}">
                <li class="nav-item">
                    <c:url value="/user/mypage" var="myPage"/>
                    <a class="nav-link" href="${myPage}">마이페이지</a>
                </li>
                <li class="nav-item">
                    <c:url value="/user/signout" var="signOutPage"/>
                    <a class="nav-link" href="${signOutPage}">LOGOUT</a>
                </li>
            </c:if>
        </ul>
    </div>
</div>

<!-- 알림 모달 -->
<div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notificationModalLabel">알림</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 알림 필터 -->
                <div class="notification-filters">
                    <button class="filter-btn active" data-filter="all">전체</button>
                     <button class="filter-btn" data-filter="festival">🎉 축제</button>
                    <button class="filter-btn" data-filter="community">👥 계정</button>
               </div>
                
                <!-- 빈 상태 표시 -->
                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="bi bi-bell-slash"></i>
                    </div>
                    <h6>알림이 없습니다</h6>
                    <p class="text-muted">새로운 알림이 오면 여기에 표시됩니다</p>
                </div>

                <!-- 알림 목록 컨테이너 (현재는 숨김) -->
                <div class="list-group" id="notificationList" style="display: none;">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">닫기</button>
                <button type="button" class="btn btn-primary" id="markAllRead" disabled>모든 알림 읽음</button>
            </div>
        </div>
    </div>
</div>

<!-- 로그인 모달 -->
<div id="signinModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- 최상단 닫기 버튼 -->
            <div class="modal-header">
                <button class="btn-close" data-bs-dismiss="modal" aria-label="close"></button>
            </div>
            <div class="modal-body">
                <!-- 상단 타이틀 -->
                <div>
                    <h4 class="text-center">FestGo</h4>
                </div>
                <!-- 아이디 입력 -->
                <div class="form-floating">
                    <input type="text" class="form-control mb-2" 
                        id="modalSigninUsername" placeholder="아이디" autofocus required />
                    <label for="modalSigninUsername">아이디</label>
                </div>
                <!-- 비밀번호 입력 -->
                <div class="form-floating">
                    <input type="password" class="form-control mb-2" 
                        id="modalSigninPassword" placeholder="비밀번호" required />
                    <label for="modalSigninPassword">비밀번호</label>
                </div>
                <!-- 로그인 버튼 -->
                <div class="text-danger mb-3" id="warningText"></div>
                <div class="d-grid gap-2 mx-auto">
                    <button class="btn btn-primary btn-lg" id="btnSignin">로그인</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Axios Http JS -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<c:url var="signInJS" value="/js/signIn.js" />
<script src="${ signInJS }"></script>

<!-- 알림 관련 JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // 필터 버튼 이벤트
    const filterButtons = document.querySelectorAll('.filter-btn');
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            // 활성 필터 변경
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // TODO: 필터링 로직 구현
        });
    });

    // 알림 배지 상태 관리
    function updateNotificationBadge(count) {
        const badge = document.getElementById('notificationBadge');
        if (count > 0) {
            badge.style.display = 'block';
            badge.textContent = count;
            document.getElementById('markAllRead').disabled = false;
        } else {
            badge.style.display = 'none';
            document.getElementById('markAllRead').disabled = true;
        }
    }

    // 모든 알림 읽음 처리
    document.getElementById('markAllRead')?.addEventListener('click', function() {
        // TODO: 서버에 읽음 처리 요청
        updateNotificationBadge(0);
    });

    // 알림 모달이 열릴 때 이벤트
    const notificationModal = document.getElementById('notificationModal');
    notificationModal?.addEventListener('show.bs.modal', function() {
        // TODO: 서버에서 최신 알림 데이터 가져오기
    });

    // 로그인 모달 자동 실행
    const loginRequired = "<c:out value='${loginRequired}'/>";
    if (loginRequired === "true") {
        const linkSignin = document.getElementById("linkSignin");
        linkSignin.click();
    }
});
</script>
