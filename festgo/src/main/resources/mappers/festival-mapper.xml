<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oplusz.festgo.repository.FestivalDao">
    <!-- 새로운 축제 등록 시 사용할 SQL 문장, 메서드 이름과 자동 생성된 f_id를 festival_images 테이블에 
        참조 -->
	<insert id="insertFestivals" useGeneratedKeys="true"
	        keyProperty="feId" keyColumn="fe_id">
	    insert into festival (
	        fe_name, fe_start_date, fe_end_date, lc_id, fe_postcode,
	        fe_address, fe_detail_address, fe_extra_address, fe_phone,
	        me_sponsor, fe_fee, the_id, fe_contents,
	        fe_lat, fe_long, fe_homepage, fe_image_main, fe_poster,
	        fe_created_time, fe_modified_time
	    )
	    values 
	    (#{feName}, #{feStartDate}, #{feEndDate}, #{lcId}, #{fePostcode}, #{feAddress}, #{feDetailAddress}, #{feExtraAddress},
	    #{fePhone}, #{meSponsor}, #{feFee}, #{theId}, #{feContents},
	    <if test="feLat != null">#{feLat, jdbcType=VARCHAR}</if>
	    <if test="feLat == null">NULL</if>,
	    <if test="feLong != null">#{feLong, jdbcType=VARCHAR}</if>
	    <if test="feLong == null">NULL</if>,
	    #{feHomepage}, #{feImageMain}, #{fePoster},
	    systimestamp, systimestamp)
	</insert>


    <!-- 새로운 축제 등록 시 다중 이미지 처리 -->
    <insert id="insertFestivalImage" parameterType="com.oplusz.festgo.domain.FestivalImage">
        INSERT INTO festival_image (fe_id, fi_images)
        VALUES (#{feId}, #{fiImages})
    </insert>
    
    <!-- 상세보기에서 사용할 메서드 이름과 SQL 문장 -->
    <select id="selectFestivalById" resultType="Festival">
        select * from festival where fe_id = #{feId}
    </select>
    
    <!-- 특정 기간 내 축제 데이터 조회 -->
 
<select id="findFestivalsBetween" resultType="com.oplusz.festgo.dto.FestivalCalendarDto">
    SELECT 
        fe_id AS feId,
        fe_name AS feName,
        TO_CHAR(fe_start_date, 'YYYY-MM-DD') AS feStartDate,
        TO_CHAR(fe_end_date, 'YYYY-MM-DD') AS feEndDate,
        fe_contents AS feContents,
        fe_image_main AS feImageMain,
        fe_address AS feAddress
    FROM festival
    WHERE TRUNC(fe_start_date) &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
      AND TRUNC(fe_end_date) &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
</select>

    
    <!-- 축제 검색 -->
    <select id="selectFestivalForSearch" resultType="com.oplusz.festgo.dto.FestivalCalendarDto">
        <bind name="searchKeyword" value="'%' + keyword + '%'" />
        select 
            fe_id AS feId,
            fe_name AS feName,
            TO_CHAR(fe_start_date, 'YYYY-MM-DD') AS feStartDate,
            TO_CHAR(fe_end_date, 'YYYY-MM-DD') AS feEndDate,
            fe_contents AS feContents,
            fe_image_main AS feImageMain,
            fe_address AS feAddress
        from festival
        where upper(fe_name) like upper(#{searchKeyword})
        <if test="month != null">
            and to_char(fe_start_date, 'mm') = #{month} and to_char(fe_end_date, 'mm') = #{month}   
        </if>
        <if test="lcId != null">
            and lc_id = #{lcId} 
        </if>
        <if test="theId != null">
            and the_id = #{theId}
        </if>
        offset #{startIndexNum} rows fetch first 12 rows only
    </select>

    <!-- 검색한 축제 개수 -->
    <select id="selectFestivalForReload" resultType="integer">
        <bind name="searchKeyword" value="'%' + keyword + '%'" />
        select count(*)
        from festival
        where upper(fe_name) like upper(#{searchKeyword})
        <if test="month != null">
            and to_char(fe_start_date, 'mm') = #{month} and to_char(fe_end_date, 'mm') = #{month}   
        </if>
        <if test="lcId != null">
            and lc_id = #{lcId} 
        </if>
        <if test="theId != null">
            and the_id = #{theId}
        </if>
    </select>

    
    <!-- 최근에 등록된 축제 (5개) -->
    <select id="selectFestivalByCreatedTime" resultType="Festival">
        select * from festival order by fe_created_time desc
        offset 0 rows fetch first 5 rows only
    </select>

    
    <!-- 축제 이름으로 축제 id 검색 -->
    <select id="selectFeIdByName" resultType="integer">
        select fe_id from festival where upper(fe_name) = upper(#{feName})
    </select>
    
    <!-- 축제 이름과 주최자 조직명으로 축제 검색(제일 최근에 등록된 축제 1개만) -->
    <select id="selectFastestFestByFeNameAndMeSponsor" resultType="Festival">
        select *
        from festival
        where fe_name = #{feName} and me_sponsor = #{meSponsor}
        order by fe_created_time desc
        fetch first 1 rows only
    </select>
    
    <!-- 희성 작성 시작 ================================================================================================== -->
    
    <!-- 전체 축제 리스트 불러오기 -->
    <select id="selectFestivalAll">
        select * from festival 
    </select>
    
    <!-- likes랑 조인된 축제리스트 불러오기 -->
    <!-- 축제id, 축제명, 시작일, 종료일, 개최지, 연락처, 주최자, 메인이미지, 좋아요id, 멤버id -->
    <!-- me_id로 찾음 -->
    <select id="selectFestivalJoinLikesByMemberId">
        select festival.fe_id, fe_name, fe_start_date, fe_end_date, 
            fe_address, fe_phone, me_sponsor, fe_image_main, li_id, me_id
        from festival
        inner join likes on likes.fe_id = festival.fe_id
        where me_id = #{me_id}
    </select>
    
    <!-- fest_request랑 조인된 축제리스트 불러오기 -->
    <!-- 축제id, 승인분류번호, 거절사유, 축제명, 시작일, 종료일, 개최지, 연락처, 주최자, 메인이미지 -->
    
    <!-- 관리자용은 전체축제 -->
    <select id="selectFestivalJoinRequestAll">
        select festival.fe_id, fr_approval, fr_cause, fe_name, fe_start_date, 
            fe_end_date, fe_address, fe_phone, me_sponsor, fe_image_main 
        from fest_request 
        inner join festival on fest_request.fe_id = festival.fe_id
    </select>
    
    <!-- 사업자용은 me_sponsor로 찾음 -->
    <select id="selectFestivalJoinRequestBySponsor">
        select festival.fe_id, fr_approval, fr_cause, fe_name, fe_start_date, 
            fe_end_date, fe_address, fe_phone, me_sponsor, fe_image_main 
        from fest_request 
        inner join festival on fest_request.fe_id = festival.fe_id
        where me_sponsor = #{me_sponsor}
    </select>
    
    <!-- 마이페이지에서 축제 삭제 -->
    <delete id="deleteFestivalByFeId">
        delete from festival where fe_id = #{fe_id}
    </delete>
    <!-- 희성 작성 끝 ================================================================================================== -->
    
</mapper>
